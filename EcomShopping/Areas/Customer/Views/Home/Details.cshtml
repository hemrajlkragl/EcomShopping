@model EcomShopping.Models.Products;
@using EcomShopping.Utility
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    List<Products> products = HttpContextAccessor.HttpContext.Session.Get<List<Products>>("products");
    Products product = null;
    if(products != null)
    {
        product = products.FirstOrDefault(c => c.Id == Model.Id);
    }
}
<h2 class="text-info">Detailed Product</h2>
<form asp-action="Details" method="post" enctype="multipart/form-data">
    <div class="p-4 rounded border row">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id"/>
        <div class="col-1"></div>
        <div class="col-7">
            <div class="form-group row mb-2">
            <div class="col-3">
                <label asp-for="Name" ></label>
            </div>
            <div class="col-5">
                <input asp-for="Name" readonly="readonly"  class="form-control"/>
            </div>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group row mb-2">
            <div class="col-3">
                <label asp-for="Price"></label>
            </div>
            <div class="col-5">
                <input asp-for="Price" readonly="readonly" class="form-control"/>
            </div>
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>

        <div class="form-group row mb-2">
            <div class="col-3">
                <label asp-for="ProductColor"></label>
            </div>
            <div class="col-5">
                <input asp-for="ProductColor" readonly="readonly" class="form-control"/>
            </div>
            <span asp-validation-for="ProductColor" class="text-danger"></span>
        </div>
        <div class="form-group row mb-2">
            <div class="col-3">
                <label asp-for="ProductTypeId"></label>
            </div>
            <div class="col-5">
                @*<select asp-for="ProductTypeId" asp-items="ViewBag.productTypeId" class="form-control"></select>*@
                <input asp-for="ProductTypes.ProductType" readonly="readonly" class="form-control"/>
            </div>
            <span asp-validation-for="ProductTypes.ProductType" class="text-danger"></span>
        </div>
        <div class="form-group row mb-2">
            <div class="col-3">
                
            </div>
            <div class="col-5">
                    @if (product != null)
                    {
                        <button type="submit" class="btn btn-info form-control" asp-action="Remove" asp-route-id="@Model.Id">Remove from Cart</button>
                    }
                    else
                    {
                        <input type="submit" class="btn btn-info form-control" value="Add to Cart"/>
                    }
            </div>
            
        </div>
        <div class="form-group">
            <a asp-action="Index" class="btn btn-primary">Back to list</a>
        </div>
        </div>
        
        @*<div class="col-1"></div>*@
        <div class="col-3">
            
            <img src="~/@Model.Image" width="100%" style="border-radius:5px; border:1px solid #efefef"/>
            &nbsp;
            @if(Model.IsAvailable){
                <img src="~/Images/instock.jpg" width="250px" height="50px"/>   
            }
            else{
                <img src="~/Images/notinstock.jpg" width="250px" height="50px"/>   
            }
            
        </div>
        <div class="col-1"></div>
    </div>
    
</form>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }